# Generated from pddl.g4 by ANTLR 4.11.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,35,396,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,1,0,1,0,1,0,
        1,0,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,
        1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,
        1,5,1,5,1,5,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,9,1,9,1,10,
        1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,
        1,14,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,
        1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,
        1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,19,
        1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,
        1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,
        1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,
        1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,
        1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,25,1,25,
        1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,26,
        1,26,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,
        1,28,1,28,1,28,1,28,1,28,1,28,1,29,1,29,5,29,280,8,29,10,29,12,29,
        283,9,29,1,30,1,30,1,31,1,31,3,31,289,8,31,1,32,1,32,1,32,1,33,1,
        33,1,34,3,34,297,8,34,1,34,4,34,300,8,34,11,34,12,34,301,1,34,1,
        34,4,34,306,8,34,11,34,12,34,307,3,34,310,8,34,1,34,1,34,3,34,314,
        8,34,1,35,4,35,317,8,35,11,35,12,35,318,1,35,1,35,1,36,1,36,1,36,
        1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,
        1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,
        1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,
        1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,
        1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,3,36,386,8,36,1,37,1,37,
        1,37,1,37,1,37,1,37,1,37,3,37,395,8,37,0,0,38,1,1,3,2,5,3,7,4,9,
        5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,
        33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,
        55,28,57,29,59,30,61,0,63,0,65,31,67,0,69,32,71,33,73,34,75,35,1,
        0,3,2,0,65,90,97,122,3,0,45,45,48,57,95,95,3,0,9,10,13,13,32,32,
        409,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,
        0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,
        0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,
        0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,
        0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,
        0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,
        0,65,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,
        1,77,1,0,0,0,3,81,1,0,0,0,5,85,1,0,0,0,7,92,1,0,0,0,9,100,1,0,0,
        0,11,109,1,0,0,0,13,115,1,0,0,0,15,117,1,0,0,0,17,123,1,0,0,0,19,
        125,1,0,0,0,21,127,1,0,0,0,23,129,1,0,0,0,25,131,1,0,0,0,27,133,
        1,0,0,0,29,135,1,0,0,0,31,142,1,0,0,0,33,150,1,0,0,0,35,157,1,0,
        0,0,37,171,1,0,0,0,39,178,1,0,0,0,41,190,1,0,0,0,43,201,1,0,0,0,
        45,209,1,0,0,0,47,221,1,0,0,0,49,235,1,0,0,0,51,243,1,0,0,0,53,252,
        1,0,0,0,55,259,1,0,0,0,57,268,1,0,0,0,59,277,1,0,0,0,61,284,1,0,
        0,0,63,288,1,0,0,0,65,290,1,0,0,0,67,293,1,0,0,0,69,313,1,0,0,0,
        71,316,1,0,0,0,73,385,1,0,0,0,75,394,1,0,0,0,77,78,5,97,0,0,78,79,
        5,110,0,0,79,80,5,100,0,0,80,2,1,0,0,0,81,82,5,110,0,0,82,83,5,111,
        0,0,83,84,5,116,0,0,84,4,1,0,0,0,85,86,5,97,0,0,86,87,5,115,0,0,
        87,88,5,115,0,0,88,89,5,105,0,0,89,90,5,103,0,0,90,91,5,110,0,0,
        91,6,1,0,0,0,92,93,5,58,0,0,93,94,5,100,0,0,94,95,5,111,0,0,95,96,
        5,109,0,0,96,97,5,97,0,0,97,98,5,105,0,0,98,99,5,110,0,0,99,8,1,
        0,0,0,100,101,5,58,0,0,101,102,5,111,0,0,102,103,5,98,0,0,103,104,
        5,106,0,0,104,105,5,101,0,0,105,106,5,99,0,0,106,107,5,116,0,0,107,
        108,5,115,0,0,108,10,1,0,0,0,109,110,5,58,0,0,110,111,5,105,0,0,
        111,112,5,110,0,0,112,113,5,105,0,0,113,114,5,116,0,0,114,12,1,0,
        0,0,115,116,5,61,0,0,116,14,1,0,0,0,117,118,5,58,0,0,118,119,5,103,
        0,0,119,120,5,111,0,0,120,121,5,97,0,0,121,122,5,108,0,0,122,16,
        1,0,0,0,123,124,5,40,0,0,124,18,1,0,0,0,125,126,5,41,0,0,126,20,
        1,0,0,0,127,128,5,34,0,0,128,22,1,0,0,0,129,130,5,44,0,0,130,24,
        1,0,0,0,131,132,5,45,0,0,132,26,1,0,0,0,133,134,5,42,0,0,134,28,
        1,0,0,0,135,136,5,100,0,0,136,137,5,101,0,0,137,138,5,102,0,0,138,
        139,5,105,0,0,139,140,5,110,0,0,140,141,5,101,0,0,141,30,1,0,0,0,
        142,143,5,112,0,0,143,144,5,114,0,0,144,145,5,111,0,0,145,146,5,
        98,0,0,146,147,5,108,0,0,147,148,5,101,0,0,148,149,5,109,0,0,149,
        32,1,0,0,0,150,151,5,100,0,0,151,152,5,111,0,0,152,153,5,109,0,0,
        153,154,5,97,0,0,154,155,5,105,0,0,155,156,5,110,0,0,156,34,1,0,
        0,0,157,158,5,58,0,0,158,159,5,114,0,0,159,160,5,101,0,0,160,161,
        5,113,0,0,161,162,5,117,0,0,162,163,5,105,0,0,163,164,5,114,0,0,
        164,165,5,101,0,0,165,166,5,109,0,0,166,167,5,101,0,0,167,168,5,
        110,0,0,168,169,5,116,0,0,169,170,5,115,0,0,170,36,1,0,0,0,171,172,
        5,58,0,0,172,173,5,116,0,0,173,174,5,121,0,0,174,175,5,112,0,0,175,
        176,5,101,0,0,176,177,5,115,0,0,177,38,1,0,0,0,178,179,5,58,0,0,
        179,180,5,112,0,0,180,181,5,114,0,0,181,182,5,101,0,0,182,183,5,
        100,0,0,183,184,5,105,0,0,184,185,5,99,0,0,185,186,5,97,0,0,186,
        187,5,116,0,0,187,188,5,101,0,0,188,189,5,115,0,0,189,40,1,0,0,0,
        190,191,5,58,0,0,191,192,5,102,0,0,192,193,5,117,0,0,193,194,5,110,
        0,0,194,195,5,99,0,0,195,196,5,116,0,0,196,197,5,105,0,0,197,198,
        5,111,0,0,198,199,5,110,0,0,199,200,5,115,0,0,200,42,1,0,0,0,201,
        202,5,58,0,0,202,203,5,97,0,0,203,204,5,99,0,0,204,205,5,116,0,0,
        205,206,5,105,0,0,206,207,5,111,0,0,207,208,5,110,0,0,208,44,1,0,
        0,0,209,210,5,58,0,0,210,211,5,112,0,0,211,212,5,97,0,0,212,213,
        5,114,0,0,213,214,5,97,0,0,214,215,5,109,0,0,215,216,5,101,0,0,216,
        217,5,116,0,0,217,218,5,101,0,0,218,219,5,114,0,0,219,220,5,115,
        0,0,220,46,1,0,0,0,221,222,5,58,0,0,222,223,5,112,0,0,223,224,5,
        114,0,0,224,225,5,101,0,0,225,226,5,99,0,0,226,227,5,111,0,0,227,
        228,5,110,0,0,228,229,5,100,0,0,229,230,5,105,0,0,230,231,5,116,
        0,0,231,232,5,105,0,0,232,233,5,111,0,0,233,234,5,110,0,0,234,48,
        1,0,0,0,235,236,5,58,0,0,236,237,5,101,0,0,237,238,5,102,0,0,238,
        239,5,102,0,0,239,240,5,101,0,0,240,241,5,99,0,0,241,242,5,116,0,
        0,242,50,1,0,0,0,243,244,5,58,0,0,244,245,5,112,0,0,245,246,5,114,
        0,0,246,247,5,111,0,0,247,248,5,99,0,0,248,249,5,101,0,0,249,250,
        5,115,0,0,250,251,5,115,0,0,251,52,1,0,0,0,252,253,5,58,0,0,253,
        254,5,101,0,0,254,255,5,118,0,0,255,256,5,101,0,0,256,257,5,110,
        0,0,257,258,5,116,0,0,258,54,1,0,0,0,259,260,5,105,0,0,260,261,5,
        110,0,0,261,262,5,99,0,0,262,263,5,114,0,0,263,264,5,101,0,0,264,
        265,5,97,0,0,265,266,5,115,0,0,266,267,5,101,0,0,267,56,1,0,0,0,
        268,269,5,100,0,0,269,270,5,101,0,0,270,271,5,99,0,0,271,272,5,114,
        0,0,272,273,5,101,0,0,273,274,5,97,0,0,274,275,5,115,0,0,275,276,
        5,101,0,0,276,58,1,0,0,0,277,281,3,61,30,0,278,280,3,63,31,0,279,
        278,1,0,0,0,280,283,1,0,0,0,281,279,1,0,0,0,281,282,1,0,0,0,282,
        60,1,0,0,0,283,281,1,0,0,0,284,285,7,0,0,0,285,62,1,0,0,0,286,289,
        3,61,30,0,287,289,7,1,0,0,288,286,1,0,0,0,288,287,1,0,0,0,289,64,
        1,0,0,0,290,291,5,63,0,0,291,292,3,61,30,0,292,66,1,0,0,0,293,294,
        2,48,57,0,294,68,1,0,0,0,295,297,5,45,0,0,296,295,1,0,0,0,296,297,
        1,0,0,0,297,299,1,0,0,0,298,300,3,67,33,0,299,298,1,0,0,0,300,301,
        1,0,0,0,301,299,1,0,0,0,301,302,1,0,0,0,302,309,1,0,0,0,303,305,
        5,46,0,0,304,306,3,67,33,0,305,304,1,0,0,0,306,307,1,0,0,0,307,305,
        1,0,0,0,307,308,1,0,0,0,308,310,1,0,0,0,309,303,1,0,0,0,309,310,
        1,0,0,0,310,314,1,0,0,0,311,312,5,35,0,0,312,314,5,116,0,0,313,296,
        1,0,0,0,313,311,1,0,0,0,314,70,1,0,0,0,315,317,7,2,0,0,316,315,1,
        0,0,0,317,318,1,0,0,0,318,316,1,0,0,0,318,319,1,0,0,0,319,320,1,
        0,0,0,320,321,6,35,0,0,321,72,1,0,0,0,322,323,5,58,0,0,323,324,5,
        116,0,0,324,325,5,121,0,0,325,326,5,112,0,0,326,327,5,105,0,0,327,
        328,5,110,0,0,328,386,5,103,0,0,329,330,5,58,0,0,330,331,5,100,0,
        0,331,332,5,117,0,0,332,333,5,114,0,0,333,334,5,97,0,0,334,335,5,
        116,0,0,335,336,5,105,0,0,336,337,5,111,0,0,337,338,5,110,0,0,338,
        339,5,45,0,0,339,340,5,105,0,0,340,341,5,110,0,0,341,342,5,101,0,
        0,342,343,5,113,0,0,343,344,5,117,0,0,344,345,5,97,0,0,345,346,5,
        108,0,0,346,347,5,105,0,0,347,348,5,116,0,0,348,349,5,105,0,0,349,
        350,5,101,0,0,350,386,5,115,0,0,351,352,5,58,0,0,352,353,5,116,0,
        0,353,354,5,105,0,0,354,355,5,109,0,0,355,386,5,101,0,0,356,357,
        5,58,0,0,357,358,5,102,0,0,358,359,5,108,0,0,359,360,5,117,0,0,360,
        361,5,101,0,0,361,362,5,110,0,0,362,363,5,116,0,0,363,386,5,115,
        0,0,364,365,5,58,0,0,365,366,5,97,0,0,366,367,5,100,0,0,367,386,
        5,108,0,0,368,369,5,58,0,0,369,370,5,100,0,0,370,371,5,117,0,0,371,
        372,5,114,0,0,372,373,5,97,0,0,373,374,5,116,0,0,374,375,5,105,0,
        0,375,376,5,118,0,0,376,377,5,101,0,0,377,378,5,45,0,0,378,379,5,
        97,0,0,379,380,5,99,0,0,380,381,5,116,0,0,381,382,5,105,0,0,382,
        383,5,111,0,0,383,384,5,110,0,0,384,386,5,115,0,0,385,322,1,0,0,
        0,385,329,1,0,0,0,385,351,1,0,0,0,385,356,1,0,0,0,385,364,1,0,0,
        0,385,368,1,0,0,0,386,74,1,0,0,0,387,395,5,62,0,0,388,389,5,62,0,
        0,389,395,5,61,0,0,390,395,5,60,0,0,391,392,5,60,0,0,392,395,5,61,
        0,0,393,395,5,61,0,0,394,387,1,0,0,0,394,388,1,0,0,0,394,390,1,0,
        0,0,394,391,1,0,0,0,394,393,1,0,0,0,395,76,1,0,0,0,11,0,281,288,
        296,301,307,309,313,318,385,394,1,6,0,0
    ]

class pddlLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    LP = 9
    RP = 10
    QUOTE = 11
    COMMA = 12
    DASH = 13
    MULTIPLICATION = 14
    DEFINE = 15
    PROBLEM = 16
    DOMAIN = 17
    REQUIREMENTS = 18
    TYPES = 19
    PREDICATES = 20
    FUNCTIONS = 21
    ACTION = 22
    PARAMETERS = 23
    PRECONDITION = 24
    EFFECT = 25
    PROCESS = 26
    EVENT = 27
    INCREASE = 28
    DECREASE = 29
    NAME = 30
    VARIABLE = 31
    NUMBER = 32
    WS = 33
    REQUIRE_KEY = 34
    COMPARATOR = 35

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'and'", "'not'", "'assign'", "':domain'", "':objects'", "':init'", 
            "'='", "':goal'", "'('", "')'", "'\"'", "','", "'-'", "'*'", 
            "'define'", "'problem'", "'domain'", "':requirements'", "':types'", 
            "':predicates'", "':functions'", "':action'", "':parameters'", 
            "':precondition'", "':effect'", "':process'", "':event'", "'increase'", 
            "'decrease'" ]

    symbolicNames = [ "<INVALID>",
            "LP", "RP", "QUOTE", "COMMA", "DASH", "MULTIPLICATION", "DEFINE", 
            "PROBLEM", "DOMAIN", "REQUIREMENTS", "TYPES", "PREDICATES", 
            "FUNCTIONS", "ACTION", "PARAMETERS", "PRECONDITION", "EFFECT", 
            "PROCESS", "EVENT", "INCREASE", "DECREASE", "NAME", "VARIABLE", 
            "NUMBER", "WS", "REQUIRE_KEY", "COMPARATOR" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "LP", "RP", "QUOTE", "COMMA", "DASH", "MULTIPLICATION", 
                  "DEFINE", "PROBLEM", "DOMAIN", "REQUIREMENTS", "TYPES", 
                  "PREDICATES", "FUNCTIONS", "ACTION", "PARAMETERS", "PRECONDITION", 
                  "EFFECT", "PROCESS", "EVENT", "INCREASE", "DECREASE", 
                  "NAME", "LETTER", "ANY_CHAR", "VARIABLE", "DIGIT", "NUMBER", 
                  "WS", "REQUIRE_KEY", "COMPARATOR" ]

    grammarFileName = "pddl.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.11.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


