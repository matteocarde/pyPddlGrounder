from antlr4 import *
from libs.pyGrounder.antlr4_directory.pddlLexer import pddlLexer
from libs.pyGrounder.antlr4_directory.pddlParser import pddlParser

def process_string(string):
            string = string[1:-1]
            string = string.replace("?", " ?")
            string = string.replace("("," (")
            string = string.replace("*", "* ")
            return string

def process_string2(string):
            string = string.replace("?", " ?")
            string = string.replace("("," (")
            string = string.replace("*", "* ")
            return string

def get_function_name_variable(string):
    string = string.replace("?", " ?")
    string = string.split(" ")
    function_name = string[0]
    function_variable = string[1:]
    return [function_name, function_variable]

def remove_comments(file_path):
    with open(file_path, "r") as f:
        # List of lines
        lines = f.readlines()
    # list of lines without ";"
    new_lines = [line for line in lines if ";" not in line]
    f.close()
    # Save the new file
    with open(file_path[:-5]+"_without_comments.pddl", "w") as f:
        f.writelines(new_lines)
        f.close()
    return file_path[:-5]+"_without_comments.pddl"

def get_antlr4_parsetree(file_path):
    '''
    Given a file.pddl it returns the parse-tree generated by the grammar with antlr4
    '''
    input_stream = FileStream(file_path)        
    lexer = pddlLexer(input_stream)
    token_stream = CommonTokenStream(lexer)
    parser = pddlParser(token_stream)
    return parser

